[project]
name = "realmate-challenge"
version = "0.1.0"
description = ""
authors = [{ name = "Seu nome aqui", email = "seu.email@email.com.br" }]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = ["django (>=5.1.6,<6.0.0)"]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.8"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
pytest-sugar = "^1.0.0"
pytest-django = "^4.11.1"
taskipy = "^1.14.1"
ipython = "^9.2.0"


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "realmate_challenge.settings"
pythonpath = "."
addopts = '-p no:warnings'

[tool.ruff]
line-length = 120
target-version = "py313"
extend-exclude = [
    'migrations',
    'manage.py',
    'realmate_challenge/settings.py'
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle (errors) (PEP8)
    "W", # pycodestyle (warnigs) (PEP8)
    "F", # pyflakes (erros comuns)
    "I", # isort (ordem de imports)
    "B", # flake8-bugbear (boas práticas)
    "S", # bandit (segurança)
    "UP", # pyupgrade (modernização de código)
    "PL", # pylint (boas práticas)
    "PT", # flake8-pytest (boas práticas do pytest)
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403", "F401"]
"tests/*" = ["F401", "F811", "S101"]

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fast_zero -vv'
post_test = 'coverage html'
